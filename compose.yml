services:
  # ── Frontend ────────────────────────────────────────────────────────
  frontend:
    build:
      context: ./application/frontend
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5001
    volumes:
      - ./application/frontend:/app
      - /app/node_modules
    networks:
      - app-network

  # ── Backend ─────────────────────────────────────────────────────────
  backend:
    build:
      context: ./application/backend
    container_name: api
    ports:
      - "5001:5000"
    volumes:
      - ./datasets:/data/datasets
      - ./application/backend:/app
    environment:
      - FLASK_ENV=development
      - MONGO_URI=mongodb://mongo:27017/movies
    depends_on:
      - mongo
    networks:
      - app-network

  # ── MongoDB ─────────────────────────────────────────────────────────
  mongo:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  # ── Hadoop HDFS & YARN ────────────────────────────────────────────
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    ports:
      - "9000:9000" # HDFS RPC
      - "9870:9870" # Namenode UI
    environment:
      - CLUSTER_NAME=bigdata-cluster
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_replication=1
    volumes:
      - ./config/hadoop:/etc/hadoop/conf
      - ./data:/data
      - ./scripts:/scripts
      - hadoop_namenode:/hadoop/dfs/name
    networks:
      - app-network

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    depends_on:
      - namenode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
      - HDFS_CONF_dfs_datanode_data_dir=file:///hadoop/dfs/data
    volumes:
      - ./config/hadoop:/etc/hadoop/conf
      - hadoop_datanode:/hadoop/dfs/data
    networks:
      - app-network

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    depends_on:
      - namenode
      - datanode
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./config/hadoop:/etc/hadoop/conf
    networks:
      - app-network

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    depends_on:
      - resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./config/hadoop:/etc/hadoop/conf
    networks:
      - app-network

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    depends_on:
      - resourcemanager
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode:9000
    volumes:
      - ./config/hadoop:/etc/hadoop/conf
      - hadoop_history:/hadoop/yarn/timeline
    networks:
      - app-network

  # ── Spark ────────────────────────────────────────────────────────────
  spark-master:
    image: bitnami/spark:3.5.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - HADOOP_CONF_DIR=/etc/hadoop/conf
    volumes:
      - ./config/hadoop:/etc/hadoop/conf
      - ./data:/data
      - ./scripts:/scripts
    depends_on:
      - namenode
    networks:
      - app-network

  spark-worker:
    image: bitnami/spark:3.5.1
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - HADOOP_CONF_DIR=/etc/hadoop/conf
    volumes:
      - ./config/hadoop:/etc/hadoop/conf
    depends_on:
      - spark-master
    networks:
      - app-network

  # ── Kafka & Zookeeper ─────────────────────────────────────────────────
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - app-network

  kafka:
    image: bitnami/kafka:3.6.1
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - app-network

  # ── Jupyter / PySpark ──────────────────────────────────────────────────
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    volumes:
      - .:/home/jovyan/work
      - ./config/hadoop:/etc/hadoop/conf
    environment:
      - HADOOP_CONF_DIR=/etc/hadoop/conf
      - YARN_CONF_DIR=/etc/hadoop/conf
    depends_on:
      - namenode
      - spark-master
      - kafka
    networks:
      - app-network

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_history:
  mongo_data:

networks:
  app-network:
    driver: bridge
